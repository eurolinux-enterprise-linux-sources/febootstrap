NAME
    febootstrap-supermin-helper - Reconstruct initramfs from supermin
    appliance.

SYNOPSIS
     febootstrap-supermin-helper supermin.img hostfiles.txt host_cpu kernel initrd
     febootstrap-supermin-helper input [...] host_cpu kernel initrd

DESCRIPTION
    *febootstrap-supermin-helper* reconstructs a bootable kernel and
    initramfs from a supermin appliance. First you should be familiar with
    febootstrap(8), febootstrap-to-initramfs(8) and
    febootstrap-to-supermin(8).

PARAMETERS
    Of the four or five required parameters, the first few are *input*
    files, and the last two are *output* files.

    "supermin.img" and "hostfiles.txt" are the input files which describe
    the supermin appliance. (You can also use a directory name here which is
    searched for files).

    "host_cpu" should be the host CPU, eg. "x86_64" or "i686".

    "kernel" and "initrd" are the temporary output files that this script
    produces. These output files are meant to be used just for booting the
    appliance, and should be deleted straight afterwards.

OPTIONS
    -k file | --kmods file
        If this option is specified, then "file" should be a list of
        wildcards matching kernel module names, eg:

         virtio*.ko
         scsi*.ko
         piix.ko

        In this case, only kernel modules matching those wildcards will be
        included in the output appliance. Note: You must resolve any
        dependencies yourself as this does not pull in dependent modules
        automatically.

        If this option is not specified, then every kernel module from the
        host will be included. This is safer, but can produce rather large
        appliances which need a lot more memory to boot.

SPEED
    In libguestfs, on a mid-range Intel-based PC, we reconstruct the
    initramfs using this script in around 1/5th of a second (assuming a "hot
    cache" - it's rather slower when run the first time on a cold cache).

    Some tips to improve performance:

    *   Use a kernel module whitelist (the "--kmods" option), and only list
        the kernel modules you really need.

    *   Minimize the appliance, removing as much extraneous junk as
        possible.

        As well as using febootstrap-minimize(8) it is worth checking for
        anything that is not necessary for your particular application and
        removing it by hand.

SEE ALSO
    febootstrap(8), febootstrap-to-initramfs(8), febootstrap-to-supermin(8).

AUTHORS
    Richard W.M. Jones <rjones @ redhat . com>

COPYRIGHT
    (C) Copyright 2009-2010 Red Hat Inc.,
    <http://people.redhat.com/~rjones/febootstrap>.

    This program is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation; either version 2 of the License, or (at your
    option) any later version.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
    Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    675 Mass Ave, Cambridge, MA 02139, USA.

